#DataSource initialization to be able to build upon the schema creation performed by Hibernate
#spring.sql.init.mode=always
#spring.sql.init.data-locations=classpath*:populateDB.sql

# Could not make the initDB.sql work
# Spring data JPA + Hibernate will create on 1st run the table
#spring.sql.init.schema-locations=classpath*:initDB.sql
#
#spring.datasource.plataform=postgresql
#spring.datasource.username=avpcoxhcmvoawt
#spring.datasource.password=d7851155b54dcf191325a5c388a8358eb1fd451e3ac86feb1f23572e9755c4e7
#
##use create as parameter in first run and after that update
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:postgresql://ec2-52-201-124-168.compute-1.amazonaws.com:5432/d3tpgdoofo180g
#spring.jpa.open-in-view=true
#
#
#spring.datasource.driver-class-name=org.postgresql.Driver
#
#
spring.datasource.url=${JDBC_DATASOURCE_URL}
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
server.port=${PORT:8080}

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true