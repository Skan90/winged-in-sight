# Swagger 2 (3.0.0) workaround
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# DataSource initialization to be able to build upon the schema creation performed by Hibernate
#spring.sql.init.mode=always
#spring.sql.init.data-locations=classpath*:populateDB.sql

# Could not make the initDB.sql work
# Spring data JPA + Hibernate will create on 1st run the table


# Database configuration for local testing
#spring.datasource.plataform=postgresql
#spring.jpa.database=POSTGRESQL
#spring.datasource.username=postgres
#spring.datasource.password=example
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:postgresql://localhost:5432/bird
#spring.jpa.open-in-view=true

#

# Database configuration for HEROKU
spring.datasource.url=${HEROKU_POSTGRESQL_MAUVE_URL}
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
server.port=${PORT:8080}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true
