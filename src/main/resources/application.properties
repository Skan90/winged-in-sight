#DataSource initialization to be able to build upon the schema creation performed by Hibernate
#spring.sql.init.mode=always
#spring.sql.init.data-locations=classpath*:populateDB.sql

# Could not make the initDB.sql work
# Spring data JPA + Hibernate will create on 1st run the table
#spring.sql.init.schema-locations=classpath*:initDB.sql

spring.datasource.plataform=postgresql
spring.jpa.database=POSTGRESQL
#spring.datasource.username=postgres
#spring.datasource.password=example

#use create as parameter in first run and after that update
#spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=${JDBC_DATABASE_URL:}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.jpa.open-in-view=true

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true

server.port=${PORT:8080}